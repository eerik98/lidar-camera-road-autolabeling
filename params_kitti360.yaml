#params_kitti360.yaml

dataset_path: '/home/eerik/DATA/KITTI-360' #path to the dataset 

origin: # used as additional reference for lidar-based autolabeling, as the closest scan ring can be quite far away from the vehicle
  l_wheel_scan_loc: [1.9, 0.8, -1.73] # location of the left wheel in the lidar frame. computed based on https://www.cvlibs.net/datasets/kitti-360/documentation.php
  center_scan_loc: [1.9, 0, -1.73] # location of the front axel center in the lidar frame. 
  r_wheel_scan_loc: [1.9, -0.8, -1.73] #location of the left wheel in the lidar frame. 

data_sampling:
  crop_start: 0 # image cropping start location (pixels from top). It is recommend to crop out unrelevant image ares (sky, car hood). 
  crop_end: -1 # image cropping end location (pixels from top)
  dist_between_samples: 50 # distance between samples (meters)

pre_processing:
  lidar_fov: 120 # lidar point inside the field of view are retained (degrees)
  distance_filter_threshold: 0.05 # minimum distance between consecutive trajectory points (meters)
  height_filter_threshold: 0.3 # maximum height increase between consecutive trajectory points (meters)
  max_pcd2gnss_distance: 1.0 # maximum distance between point cloud and gnss poses to still register a match (meters)
  max_center2wheel_distance: 2 # maximum distance from trajectory center to either wheel to register a match (meters)
  occlusion_filter_pixel_threshold: 10 # the neihbourhood that is considered when checking occlusion (pixels)
  filter_noise: False # if noise filtering should be applied to the lidar scan 
  noise_filtering_nb_neighbors: 20 # number of neighbours for statistical noise filtering from point cloud
  noise_filtering_std_ratio: 1 # standard deviation ratio for statistical noise filtering from point cloud
  trajectory_length: 50 # future trajectory length

lidar_auto_labeling:
  max_radial_dist: 5 # maximum allowed radial distance difference between road point and trajectory point at each scan ring (meters)
  use_height: True # if height-based autolabeling should be used
  use_gradient: True # if gradient-based autolabeling should be used
  gradient_label_std: 0.05 # deviation parameter for gradient-based autolabel
  height_label_std: 0.1 # deviation parameter for height-based autolabel
 
camera_auto_labeling:
  min_refrence_feats: 200 # minimum number of reference features for valid prototype
  img_scale: 1.0 # image scaling before extracting features. For large images downscaling might be needed to fit in the GPU.
  camera_label_std: 0.5 # deviation parameter for camera-based autolabel

post_processing:
  use_lidar_label: True # if lidar-based autolabed should be used
  use_camera_label: True # if camera-based autolabel should be used
  use_crf: True # if CRF post processing should be used. 
